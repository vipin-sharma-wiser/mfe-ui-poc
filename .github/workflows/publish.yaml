name: Build and Publish Nx Lib

on:
  push:
    tags:
      - 'v*.*.*-lib1-lib*'
    branches:
      - dev
    paths:
      - 'libs/lib1/**'
      - '.github/workflows/publish.yaml'

jobs:
  build-lib:
    name: Build Lib
    runs-on: ubuntu-latest
    outputs:
      tag: '${{ env.TAG }}'
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
          registry-url: https://npm.pkg.github.com/
          scope: '@vipin-sharma-wiser'

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install NX
        uses: nrwl/nx-set-shas@v2

      - name: Cache Deps
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-lib1-qa-build-lib-${{ hashFiles('./yarn.lock') }}

      - name: Install dependencies
        run: yarn
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: yarn nx build lib1 --configuration==qa --skip-nx-cache

      - name: Generate version TAG
        run: echo "TAG=$(git show -s --format=%cd --date=format:%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Set up cache module
        uses: actions/cache@v3.0.2
        env:
          cache-name: cache-lib1-qa-module
        with:
          path: ./dist
          key: ${{ runner.os }}-lib1-qa-${{ env.TAG }}

  publish-lib:
    name: Publish Lib
    needs: ['build-lib']
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Set up actions/checkout@v2.4.2
        uses: actions/checkout@v2.4.2

      - name: Set up cache module
        uses: actions/cache@v3.0.2
        env:
          cache-name: cache-lib1-qa-module
        with:
          path: |
            ./dist
          key: ${{ runner.os }}-lib1-qa-${{ needs.build-lib.outputs.tag }}

      - name: Copy .npmrc file to publishable lib
        run: |
          cp .npmrc dist/libs/lib1

      - name: Publish Package
        working-directory: dist/libs/lib1
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
